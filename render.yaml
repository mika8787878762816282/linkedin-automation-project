services:
  - type: web
    name: linkedin-automation-backend
    env: python
    # La commande de build va maintenant gérer la construction du frontend et la copie des fichiers statiques
    buildCommand: |
      cd job-automation-frontend/job-automation-ui && npm install && npm run build && ls -F job-automation-frontend/job-automation-ui/dist/ && \
      cd ../../.. && \
    rm -rf job-automation-backend/job-automation-api/static/* \
      mkdir -p job-automation-backend/job-automation-api/static && \
      cp -r job-automation-frontend/job-automation-ui/dist/* job-automation-backend/job-automation-api/static/ && \
      cd job-automation-backend/job-automation-api && pip install -r requirements.txt
    startCommand: "gunicorn --chdir src main:app"
    envVars:
      - key: GMAIL_ADDRESS
        sync: false
      - key: GMAIL_APP_PASSWORD
        sync: false
      - key: GITHUB_TOKEN
        sync: false
    rootDir: job-automation-backend/job-automation-api

  # Le service 'static' pour le frontend est commenté car cette configuration est pour un déploiement en service unique.
  # Si vous souhaitez déployer le frontend comme un site statique séparé, décommentez cette section et supprimez la logique frontend du buildCommand du backend.
  # - type: static
  #   name: linkedin-automation-frontend
  #   env: static
  #   buildCommand: "npm install && npm run build"
  #   publishPath: "dist"
  #   rootDir: job-automation-frontend/job-automation-ui

